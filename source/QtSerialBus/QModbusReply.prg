/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2019 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "hbclass.ch"

#ifndef QT5XHB_NO_REQUESTS
#endif

CLASS QModbusReply INHERIT QObject

   METHOD onFinished
   METHOD onErrorOccurred

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject () CLASS QModbusReply
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5,8,0))
#include <QtSerialBus/QModbusReply>
#endif
#endif

#include "qt5xhb_common.h"
#include "qt5xhb_macros.h"
#include "qt5xhb_utils.h"

#ifdef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5,8,0))
#include <QtSerialBus/QModbusReply>
#endif
#endif

/*
QModbusReply(ReplyType type, int serverAddress, QObject *parent = nullptr)
*/

/*
ReplyType type() const
*/

/*
int serverAddress() const
*/

/*
bool isFinished() const
*/

/*
QModbusDataUnit result() const
*/

/*
QModbusResponse rawResult() const
*/

/*
QString errorString() const
*/

/*
QModbusDevice::Error error() const
*/

/*
void setResult(const QModbusDataUnit &unit)
*/

/*
void setRawResult(const QModbusResponse &unit)
*/

/*
void setFinished(bool isFinished)
*/

/*
void setError(QModbusDevice::Error error, const QString &errorText)
*/

void QModbusReplySlots_connect_signal ( const QString & signal, const QString & slot );

HB_FUNC_STATIC( QMODBUSREPLY_ONFINISHED )
{
#if (QT_VERSION >= QT_VERSION_CHECK(5,8,0))
  QModbusReplySlots_connect_signal( "finished()", "finished()" );
#else
  hb_retl( false );
#endif
}

HB_FUNC_STATIC( QMODBUSREPLY_ONERROROCCURRED )
{
#if (QT_VERSION >= QT_VERSION_CHECK(5,8,0))
  QModbusReplySlots_connect_signal( "errorOccurred(QModbusDevice::Error)", "errorOccurred(QModbusDevice::Error)" );
#else
  hb_retl( false );
#endif
}

#pragma ENDDUMP
