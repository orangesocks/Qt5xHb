/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QCalendarWidgetSlots.h"

QCalendarWidgetSlots::QCalendarWidgetSlots(QObject *parent) : QObject(parent)
{
}

QCalendarWidgetSlots::~QCalendarWidgetSlots()
{
}
void QCalendarWidgetSlots::activated( const QDate & date )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "activated(QDate)" );
  if( cb )
  {
    PHB_ITEM psender = Signals_return_qobject ( (QObject *) object, "QCALENDARWIDGET" );
    PHB_ITEM pdate = Signals_return_object( (void *) &date, "QDATE" );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pdate );
    hb_itemRelease( psender );
    hb_itemRelease( pdate );
  }
}
void QCalendarWidgetSlots::clicked( const QDate & date )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "clicked(QDate)" );
  if( cb )
  {
    PHB_ITEM psender = Signals_return_qobject ( (QObject *) object, "QCALENDARWIDGET" );
    PHB_ITEM pdate = Signals_return_object( (void *) &date, "QDATE" );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pdate );
    hb_itemRelease( psender );
    hb_itemRelease( pdate );
  }
}
void QCalendarWidgetSlots::currentPageChanged( int year, int month )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "currentPageChanged(int,int)" );
  if( cb )
  {
    PHB_ITEM psender = Signals_return_qobject ( (QObject *) object, "QCALENDARWIDGET" );
    PHB_ITEM pyear = hb_itemPutNI( NULL, year );
    PHB_ITEM pmonth = hb_itemPutNI( NULL, month );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 3, psender, pyear, pmonth );
    hb_itemRelease( psender );
    hb_itemRelease( pyear );
    hb_itemRelease( pmonth );
  }
}
void QCalendarWidgetSlots::selectionChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "selectionChanged()" );
  if( cb )
  {
    PHB_ITEM psender = Signals_return_qobject ( (QObject *) object, "QCALENDARWIDGET" );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}

void QCalendarWidgetSlots_connect_signal ( const QString & signal, const QString & slot )
{
  QCalendarWidget * obj = (QCalendarWidget *) hb_itemGetPtr( hb_objSendMsg( hb_stackSelfItem(), "POINTER", 0 ) );

  if( obj )
  {
    QCalendarWidgetSlots * s = QCoreApplication::instance()->findChild<QCalendarWidgetSlots *>();

    if( s == NULL )
    {
      s = new QCalendarWidgetSlots();
      s->moveToThread( QCoreApplication::instance()->thread() );
      s->setParent( QCoreApplication::instance() );
    }

    hb_retl( Signals_connection_disconnection( s, signal, slot ) );
  }
  else
  {
    hb_retl( false );
  }
}
